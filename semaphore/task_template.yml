---
- name: Fetch templates to get {{ env }} template id for {{ topic }}
  uri:
    method: GET
    validate_certs: no
    return_content: yes
    url: "{{ automation }}/project/{{ semaphore_project_id }}/templates"
    body_format: json
    status_code: 200
    headers:
      Cookie: "semaphore={{ semaphore_token }}"
  ignore_errors: yes 
  register: templates

- name: set {{ env }} backup template Id
  set_fact: 
    "{{ topic }}_template_{{ env }}_id": "{{ item.id }}"
  when: 
    - item.name == "{{ project_id }}-{{ env }}-{{ topic }}"
  with_items: "{{ templates.json }}"

- name: Create {{ env }} Task Template
  uri:
    method: POST
    validate_certs: no
    return_content: yes
    url: "{{ automation }}/project/{{ semaphore_project_id }}/templates"
    body_format: json
    status_code: 201
    body: '{ "alias": "{{ project_id }}-{{ env }}-{{ topic }}","playbook": "{{ playbook }}", "arguments": "[]", "description": "{{ env }} {{ topic }} Task Template","override_args": true,"project_id": {{ semaphore_project_id }},"inventory_id": {{ inventory_id }}, "repository_id": {{ repository_id }},"environment_id": {{ env_id }}, "name": "{{ project_id }}-{{ env }}-{{ topic }}", "type": ""}'
    headers:
      Cookie: "semaphore={{ semaphore_token }}"
  when:
    - "{{ topic }}_template_{{ env }}_id is not defined"

- name: Update {{ env }} Task Template
  uri:
    method: PUT
    validate_certs: no
    return_content: yes
    url: "{{ automation }}/project/{{ semaphore_project_id }}/templates/{{ vars[topic + '_template_' + env + '_id'] }}"
    body_format: json
    status_code: 204
    body: '{ "id": {{ temp_id }}, "alias": "{{ project_id }}-{{ env }}-{{ topic }}","playbook": "{{ playbook }}", "arguments": "[]", "description": "{{ env }} {{topic }} Task Template","override_args": true,"project_id": {{ semaphore_project_id }},"inventory_id": {{ inventory_id }}, "repository_id": {{ repository_id }},"environment_id": {{ env_id }}, "name": "{{ project_id }}-{{ env }}-{{ topic }}", "type": ""}'
    headers:
      Cookie: "semaphore={{ semaphore_token }}"
  vars:
    temp_id: " {{Â vars[topic + '_template_' + env + '_id'] }}"
  when:
    - "{{ topic }}_template_{{ env }}_id is defined" 


- name: Fetch templates to get {{ env }} template id for {{ topic }}
  uri:
    method: GET
    validate_certs: no
    return_content: yes
    url: "{{ automation }}/project/{{ semaphore_project_id }}/templates"
    body_format: json
    status_code: 200
    headers:
      Cookie: "semaphore={{ semaphore_token }}"
  ignore_errors: yes 
  register: templates
  when:
    - "{{ topic }}_template_{{ env }}_id is not defined"

- name: set {{ env }} {{ topic }} Task Template Id
  set_fact: 
    "{{ topic }}_template_{{ env }}_id": "{{ item.id }}"
  when: 
    - "{{ topic }}_template_{{ env }}_id is not defined"  
    - item.name == "{{ project_id }}-{{ env }}-{{ topic }}"
  with_items: "{{ templates.json }}"
